{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  accessToken: undefined,\n  user: undefined\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    userLoggedIn: (state, action) => {\n      state.accessToken = action.payload.accessToken;\n      state.user = action.payload.user;\n    },\n    userLoggedOut: state => {\n      state.accessToken = undefined;\n      state.user = undefined;\n    }\n  }\n});\nexport const {\n  userLoggedIn,\n  userLoggedOut\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","accessToken","undefined","user","authSlice","name","reducers","userLoggedIn","state","action","payload","userLoggedOut","actions","reducer"],"sources":["/var/www/html/think-in-a-redux-way/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    accessToken: undefined,\n    user: undefined,\n};\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        userLoggedIn: (state, action) => {\n            state.accessToken = action.payload.accessToken;\n            state.user = action.payload.user;\n        },\n        userLoggedOut: (state) => {\n            state.accessToken = undefined;\n            state.user = undefined;\n        },\n    },\n});\n\nexport const { userLoggedIn, userLoggedOut } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAEC,SADI;EAEjBC,IAAI,EAAED;AAFW,CAArB;AAKA,MAAME,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MADoB;EAE1BL,YAF0B;EAG1BM,QAAQ,EAAE;IACNC,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC7BD,KAAK,CAACP,WAAN,GAAoBQ,MAAM,CAACC,OAAP,CAAeT,WAAnC;MACAO,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAAP,CAAeP,IAA5B;IACH,CAJK;IAKNQ,aAAa,EAAGH,KAAD,IAAW;MACtBA,KAAK,CAACP,WAAN,GAAoBC,SAApB;MACAM,KAAK,CAACL,IAAN,GAAaD,SAAb;IACH;EARK;AAHgB,CAAD,CAA7B;AAeA,OAAO,MAAM;EAAEK,YAAF;EAAgBI;AAAhB,IAAkCP,SAAS,CAACQ,OAAlD;AACP,eAAeR,SAAS,CAACS,OAAzB"},"metadata":{},"sourceType":"module"}